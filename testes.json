[
    {
        "id": "2a3cd3ffbc077fc0",
        "type": "tab",
        "label": "Testes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7c206088ceb8f30d",
        "type": "debug",
        "z": "2a3cd3ffbc077fc0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "d4217bae8f95c23e",
        "type": "debug",
        "z": "2a3cd3ffbc077fc0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "eebd85a7c61a79bd",
        "type": "function",
        "z": "2a3cd3ffbc077fc0",
        "name": "Build two cumulating random datasets",
        "func": "// this is where you define the legend for \n// the datasets\nvar title = \"Pressão x Volume\";\n\n// variables to be used to \nvar i, x, y, r, data1, data2, pressao, pressao_teste, volume;\n// initialise the counter to 0 if it doesn't exist already\nvar data1 = flow.get('data1') || '';\nvar data2 = flow.get('data2') || '';\n\npressao = msg.payload.pressao;\nvolume = msg.payload.volume;\n\nvar count = flow.get('count') || 0;\ncount += 1;\nif (count > 15) {\n    count = 1;\n    data1 = '{x: 0,  y: 10,  r: 1},'; // Force the size of the\n    data2 = '{x: 10, y: 0, r: 1},'; // plot so it won't resize\n}\n// store the value back\nflow.set('count', count);\n// make it part of the outgoing msg object\nmsg.count = count;\n\n// for dataset #1\n// this code generates one x/y point \n// between -100 and +100 and a random \n//size between 1 and 10\n//node.warn(\"db1=\"+data1);\nx = volume;\ny = 1;\nr = 5;\ndata1 += \"{x: \" + x + \", y: \" + y + \", r: \" + r + \"},\";\n//node.warn(\"db2=\"+data1);\n// this line removes the last comma to end the dataset\ndata1 = data1.replace(/^(.*),(.*?)$/, '$1')\n\n// for dataset #2\n// this code generates one x/y point \n// between -100 and +100 and a random \n//size between 1 and 10\n\nx = volume;\ny = pressao;\nr = 5;\ndata2 += \"{x: \" + x + \", y: \" + y + \", r: \" + r + \"},\";\n\n// this line removes the last comma to end the dataset\ndata2 = data2.replace(/^(.*),(.*?)$/, '$1')\n\n// Now we build msg.payload\nmsg.payload = {\n    \"title\": title,\n    \"data1\": data1,\n    \"data2\": data2\n};\ndata1 += \",\";\ndata2 += \",\";\n\nflow.set([\"data1\", \"data2\"], [data1, data2]);\nreturn msg;\n\n// this code gets a random interger\nfunction getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 220,
        "wires": [
            [
                "88476bf5cc6a71dc",
                "46de5501c102dbd5"
            ]
        ]
    },
    {
        "id": "88476bf5cc6a71dc",
        "type": "debug",
        "z": "2a3cd3ffbc077fc0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "732fcb6b92c6670e",
        "type": "inject",
        "z": "2a3cd3ffbc077fc0",
        "name": "Inject every second",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 620,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "46de5501c102dbd5",
        "type": "template",
        "z": "2a3cd3ffbc077fc0",
        "name": "Create the msg.template to use",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<canvas id=\"bubble-chart\" width=\"1\" height=\"1\" style=\"border:1px solid #000000;\"></canvas>\n\n<script>\n  new Chart(document.getElementById(\"bubble-chart\"), {\n    type: 'bubble',\n    data: {\n      labels: \"label\",\n      datasets: [\n        {\n          label: \"{{{payload.legend1}}}\",\n          backgroundColor: \"rgba(65, 72, 255, 1.0000)\",\n          borderColor: \"#000\",\n          data: [\n            {{{payload.data1}}}\n\n          ]\n        }, {\n        label: [\"{{{payload.legend2}}}\"],\n        backgroundColor: \"rgba(255, 45, 36, 1.0000)\",\n        borderColor: \"#000\",\n        data: [\n        {{{payload.data2}}}\n        ]\n        }\n      ]\n    },\n    options: {\n        animation: false,\n        legend: {\n            display: false,\n            labels: {\n                fontColor: 'rgb(255, 99, 132)'\n            }\n        },\n    title: {\n        display: true,\n        text: '{{{payload.title}}}'\n      }, scales: {\n        yAxes: [{ \n          scaleLabel: {\n            display: true,\n            labelString: \"Pressão\"\n          }\n        }],\n        xAxes: [{ \n          scaleLabel: {\n            display: true,\n            labelString: \"Volume\"\n          }\n        }]\n      }\n    }\n});\n\n</script>",
        "output": "str",
        "x": 650,
        "y": 280,
        "wires": [
            [
                "7c206088ceb8f30d",
                "817e7b683c32aece"
            ]
        ]
    },
    {
        "id": "817e7b683c32aece",
        "type": "ui_template",
        "z": "2a3cd3ffbc077fc0",
        "group": "d45cd91b99a171dc",
        "name": "Bubble (dynamic growing)",
        "order": 3,
        "width": 8,
        "height": 9,
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 340,
        "wires": [
            [
                "d4217bae8f95c23e"
            ]
        ]
    },
    {
        "id": "ba4e55d55ab86f6a",
        "type": "ui_numeric",
        "z": "2a3cd3ffbc077fc0",
        "name": "",
        "label": "Volume",
        "tooltip": "",
        "group": "d45cd91b99a171dc",
        "order": 5,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "65c732937ad560e7"
            ]
        ]
    },
    {
        "id": "65c732937ad560e7",
        "type": "change",
        "z": "2a3cd3ffbc077fc0",
        "name": "volume",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.volume",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "eebd85a7c61a79bd"
            ]
        ]
    },
    {
        "id": "db408e6b74063d0e",
        "type": "ui_numeric",
        "z": "2a3cd3ffbc077fc0",
        "name": "",
        "label": "Pressão_2",
        "tooltip": "",
        "group": "d45cd91b99a171dc",
        "order": 1,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "1b0a136d4af41e67"
            ]
        ]
    },
    {
        "id": "1b0a136d4af41e67",
        "type": "change",
        "z": "2a3cd3ffbc077fc0",
        "name": "pressao2",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pressao_teste",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "eebd85a7c61a79bd"
            ]
        ]
    },
    {
        "id": "7472afc9fa263cb9",
        "type": "serial in",
        "z": "2a3cd3ffbc077fc0",
        "name": "serial",
        "serial": "6dc59499f7e1b1db",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "2c1b92616b9b54eb"
            ]
        ]
    },
    {
        "id": "2c1b92616b9b54eb",
        "type": "function",
        "z": "2a3cd3ffbc077fc0",
        "name": "function",
        "func": "var p1 = msg.payload[0] - 48;\nvar p2 = msg.payload[1] - 48;\nvar p3 = msg.payload[3] - 48;\nvar p4 = msg.payload[4] - 48;\nvar valor1 = (p1 * 1000) + (p2 * 100) + (p3 * 10) + p4;\nvalor1 = valor1 / 10;\nmsg.payload = { payload: valor1 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 140,
        "wires": [
            [
                "15f03dab9528dc28",
                "4c6f41338fc605d1"
            ]
        ]
    },
    {
        "id": "15f03dab9528dc28",
        "type": "debug",
        "z": "2a3cd3ffbc077fc0",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "4c6f41338fc605d1",
        "type": "change",
        "z": "2a3cd3ffbc077fc0",
        "name": "pressao",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pressao",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 140,
        "wires": [
            [
                "eebd85a7c61a79bd"
            ]
        ]
    },
    {
        "id": "5dfaaef08c09122e",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 2,
        "width": 11,
        "height": 1
    },
    {
        "id": "d2822fe1ef4b37cc",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 4,
        "width": 18,
        "height": 1
    },
    {
        "id": "77e504ceb1b6a526",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 6,
        "width": 11,
        "height": 1
    },
    {
        "id": "2d82525e6d65203a",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 7,
        "width": 18,
        "height": 1
    },
    {
        "id": "d6180fa6f9738a4a",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 8,
        "width": 13,
        "height": 1
    },
    {
        "id": "3590b14bbec9d78f",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 9,
        "width": 18,
        "height": 1
    },
    {
        "id": "1432b5464d9a18a8",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 10,
        "width": 13,
        "height": 1
    },
    {
        "id": "4cad2264182b12e2",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 11,
        "width": 18,
        "height": 1
    },
    {
        "id": "f6e4e8fa97cfe18d",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 12,
        "width": 13,
        "height": 1
    },
    {
        "id": "77a9457190dec9d0",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 13,
        "width": 18,
        "height": 1
    },
    {
        "id": "0e46c5ec5999c9f3",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 14,
        "width": 13,
        "height": 1
    },
    {
        "id": "3213ad741472860c",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 15,
        "width": 18,
        "height": 1
    },
    {
        "id": "0b95e0040f704cc0",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 16,
        "width": 13,
        "height": 1
    },
    {
        "id": "4bcad4bd75553180",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 17,
        "width": 18,
        "height": 1
    },
    {
        "id": "c08b6d2f97768722",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 18,
        "width": 13,
        "height": 1
    },
    {
        "id": "7fb07e7036b1a1e7",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 19,
        "width": 18,
        "height": 1
    },
    {
        "id": "691abae909a11d0f",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 20,
        "width": 13,
        "height": 1
    },
    {
        "id": "8f88c1aa19ba92f2",
        "type": "ui_spacer",
        "z": "2a3cd3ffbc077fc0",
        "name": "spacer",
        "group": "d45cd91b99a171dc",
        "order": 21,
        "width": 18,
        "height": 1
    },
    {
        "id": "d45cd91b99a171dc",
        "type": "ui_group",
        "name": "",
        "tab": "305bd9bfaf136b1d",
        "order": 2,
        "disp": true,
        "width": "39",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6dc59499f7e1b1db",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "0",
        "bin": "bin",
        "out": "time",
        "addchar": "false",
        "responsetimeout": "500"
    },
    {
        "id": "305bd9bfaf136b1d",
        "type": "ui_tab",
        "name": "Testes",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]